[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/post_server_test/build/bootloader/esp-idf/esptool_py && /Users/hanyi02/.espressif/python_env/idf5.1_py3.9_env/bin/python /Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/post_server_test/build/bootloader/bootloader.bin
Bootloader binary size 0x6790 bytes. 0x870 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/post_server_test.c.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable post_server_test.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/post_server_test/build/post_server_test.bin
[7/8] cd /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/post_server_test/build/esp-idf/esptool_py && /Users/hanyi02/.espressif/python_env/idf5.1_py3.9_env/bin/python /Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/post_server_test/build/partition_table/partition-table.bin /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/post_server_test/build/post_server_test.bin
post_server_test.bin binary size 0xc4e50 bytes. Smallest app partition is 0x200000 bytes. 0x13b1b0 bytes (62%) free.
[7/8] cd /Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/esptool_py && /usr/local/Cellar/cmake/3.21.3_1/bin/cmake -D IDF_PATH=/Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf -D "SERIAL_TOOL=/Users/hanyi02/.espressif/python_env/idf5.1_py3.9_env/bin/python;;/Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/post_server_test/build -P /Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/cu.wchusbserial14210 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 post_server_test.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port /dev/cu.wchusbserial14210
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c8:f0:9e:52:08:30
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000d4fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26512 bytes to 16584...
Writing at 0x00001000... (50 %)
Writing at 0x00007682... (100 %)
Wrote 26512 bytes (16584 compressed) at 0x00001000 in 0.9 seconds (effective 240.7 kbit/s)...
Hash of data verified.
Compressed 806480 bytes to 514771...
Writing at 0x00010000... (3 %)
Writing at 0x0001bea4... (6 %)
Writing at 0x00027329... (9 %)
Writing at 0x0002d205... (12 %)
Writing at 0x0003546b... (15 %)
Writing at 0x0003bbb1... (18 %)
Writing at 0x0004153e... (21 %)
Writing at 0x00046c81... (25 %)
Writing at 0x0004c5b8... (28 %)
Writing at 0x00052176... (31 %)
Writing at 0x00057e0a... (34 %)
Writing at 0x0005d58f... (37 %)
Writing at 0x00062914... (40 %)
Writing at 0x00067e96... (43 %)
Writing at 0x0006d261... (46 %)
Writing at 0x00072a2d... (50 %)
Writing at 0x0007821c... (53 %)
Writing at 0x0007de53... (56 %)
Writing at 0x000838f0... (59 %)
Writing at 0x00088da8... (62 %)
Writing at 0x0008e555... (65 %)
Writing at 0x00093f8b... (68 %)
Writing at 0x0009955b... (71 %)
Writing at 0x0009ef5b... (75 %)
Writing at 0x000a4d60... (78 %)
Writing at 0x000ab4fe... (81 %)
Writing at 0x000b0d23... (84 %)
Writing at 0x000b708c... (87 %)
Writing at 0x000c063e... (90 %)
Writing at 0x000c7685... (93 %)
Writing at 0x000cd54b... (96 %)
Writing at 0x000d281a... (100 %)
Wrote 806480 bytes (514771 compressed) at 0x00010000 in 12.4 seconds (effective 520.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 104...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (104 compressed) at 0x00008000 in 0.1 seconds (effective 252.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
