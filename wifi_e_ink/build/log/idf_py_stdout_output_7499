[1/35] Linking C static library esp-idf/efuse/libefuse.a
[2/35] Performing build step for 'bootloader'
[1/1] cd /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/wifi_e_ink/build/bootloader/esp-idf/esptool_py && /Users/hanyi02/.espressif/python_env/idf5.1_py3.9_env/bin/python /Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/wifi_e_ink/build/bootloader/bootloader.bin
Bootloader binary size 0x6790 bytes. 0x870 bytes (8%) free.
[3/33] Linking C static library esp-idf/esp_ringbuf/libesp_ringbuf.a
[4/33] Linking C static library esp-idf/xtensa/libxtensa.a
[5/33] Linking C static library esp-idf/espcoredump/libespcoredump.a
[6/33] Linking C static library esp-idf/esp_hid/libesp_hid.a
[7/33] Linking C static library esp-idf/protobuf-c/libprotobuf-c.a
[8/33] Linking C static library esp-idf/json/libjson.a
[9/33] Linking C static library esp-idf/unity/libunity.a
[10/33] Linking C static library esp-idf/wear_levelling/libwear_levelling.a
[11/33] Linking C static library esp-idf/sdmmc/libsdmmc.a
[12/33] Linking C static library esp-idf/esp_lcd/libesp_lcd.a
[13/33] Linking C static library esp-idf/perfmon/libperfmon.a
[14/33] Linking C static library esp-idf/spi_driver/libspi_driver.a
[15/33] Linking C static library esp-idf/cmock/libcmock.a
[16/33] Linking C static library esp-idf/wifi_connect/libwifi_connect.a
[17/33] Linking C static library esp-idf/mqtt/libmqtt.a
[18/33] Linking C static library esp-idf/app_trace/libapp_trace.a
[19/33] Linking C static library esp-idf/spiffs/libspiffs.a
[20/33] Linking C static library esp-idf/console/libconsole.a
[21/33] Linking C static library esp-idf/fatfs/libfatfs.a
[22/33] Linking C static library esp-idf/simple_server/libsimple_server.a
[23/33] Linking C static library esp-idf/protocomm/libprotocomm.a
[24/33] Linking C static library esp-idf/esp_local_ctrl/libesp_local_ctrl.a
[25/33] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[26/33] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/wifi_e_ink.c.obj
[27/33] Linking C static library esp-idf/main/libmain.a
[28/33] Generating ld/sections.ld
[29/33] Building C object CMakeFiles/wifi_e_ink.elf.dir/project_elf_src_esp32.c.obj
[30/33] Linking CXX executable wifi_e_ink.elf
[31/33] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/wifi_e_ink/build/wifi_e_ink.bin
[32/33] cd /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/wifi_e_ink/build/esp-idf/esptool_py && /Users/hanyi02/.espressif/python_env/idf5.1_py3.9_env/bin/python /Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/wifi_e_ink/build/partition_table/partition-table.bin /Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/wifi_e_ink/build/wifi_e_ink.bin
wifi_e_ink.bin binary size 0xc6db0 bytes. Smallest app partition is 0x200000 bytes. 0x139250 bytes (61%) free.
[32/33] cd /Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/esptool_py && /usr/local/Cellar/cmake/3.21.3_1/bin/cmake -D IDF_PATH=/Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf -D "SERIAL_TOOL=/Users/hanyi02/.espressif/python_env/idf5.1_py3.9_env/bin/python;;/Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/hanyi02/Documents/My_Project/MCU/esp/esp32_learn/wifi_e_ink/build -P /Users/hanyi02/Documents/My_Project/MCU/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/cu.wchusbserial14110 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 wifi_e_ink.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port /dev/cu.wchusbserial14110
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c8:f0:9e:52:08:30
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000d6fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26512 bytes to 16585...
Writing at 0x00001000... (50 %)
Writing at 0x00007682... (100 %)
Wrote 26512 bytes (16585 compressed) at 0x00001000 in 0.9 seconds (effective 234.0 kbit/s)...
Hash of data verified.
Compressed 814512 bytes to 518599...
Writing at 0x00010000... (3 %)
Writing at 0x0001c4fa... (6 %)
Writing at 0x00027719... (9 %)
Writing at 0x0002d8e3... (12 %)
Writing at 0x000348bf... (15 %)
Writing at 0x0003c1b2... (18 %)
Writing at 0x00041bf9... (21 %)
Writing at 0x000476a9... (25 %)
Writing at 0x0004d126... (28 %)
Writing at 0x00052c55... (31 %)
Writing at 0x000589a7... (34 %)
Writing at 0x0005e12e... (37 %)
Writing at 0x0006348a... (40 %)
Writing at 0x00068ab2... (43 %)
Writing at 0x0006dd23... (46 %)
Writing at 0x0007361c... (50 %)
Writing at 0x00078d39... (53 %)
Writing at 0x0007e740... (56 %)
Writing at 0x00084411... (59 %)
Writing at 0x00089918... (62 %)
Writing at 0x0008f0fe... (65 %)
Writing at 0x00094a20... (68 %)
Writing at 0x0009a098... (71 %)
Writing at 0x0009fa62... (75 %)
Writing at 0x000a55b3... (78 %)
Writing at 0x000abfcc... (81 %)
Writing at 0x000b184d... (84 %)
Writing at 0x000b7062... (87 %)
Writing at 0x000c0583... (90 %)
Writing at 0x000c805e... (93 %)
Writing at 0x000cdd74... (96 %)
Writing at 0x000d334c... (100 %)
Wrote 814512 bytes (518599 compressed) at 0x00010000 in 12.4 seconds (effective 524.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 104...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (104 compressed) at 0x00008000 in 0.1 seconds (effective 252.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
